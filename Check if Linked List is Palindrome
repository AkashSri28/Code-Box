/*
TC = O(n) //finding mid point + O(n) //
Approach find mid point
Reverse second hlaf of list
Now compare both halves
*/


class Solution
{
    //Function to check whether the list is palindrome.
    boolean isPalindrome(Node head) 
    {
        //Your code here
        Node slow = head, fast = head;
        while(fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        slow.next = reverse(slow.next);
        slow = slow.next;
        while(slow != null && slow.data == head.data){
            slow = slow.next;
            head = head.next;
        }
        if(slow == null){
            return true;
        }
        return false;
        
    }    
    Node reverse(Node curr){
        Node prev = null, next = null;
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
